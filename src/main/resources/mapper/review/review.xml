<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.travelcompass.review.model.mapper.ReviewMapper">

	<resultMap type="tripReviewDto" id="review">
		<result column="trip_review_id" property="tripReviewId"/>
		<result column="user_id" property="userId"/>
		<result column="content_id" property="contentId"/>
		<result column="trip_detail_id" property="tripDetailId"/>
		<result column="content" property="content"/>
		<result column="star" property="star"/>
		<result column="created_at" property="createdAt"/>
		<result column="nickname" property="nickName" />
		<result column="profile" property="profile" />
		<result column="attraction_title" property="attractionTitle" />
		<result column="like_count" property="likeCount" />
		<result column="like_check" property="likeCheck" />
		<result column="comment_count" property="commentCount" />
	</resultMap>
	
	<insert id="writeReview" parameterType="TripReviewDto" useGeneratedKeys="true" keyProperty="tripReviewId">
		INSERT INTO trip_review (user_id, content_id, trip_detail_id, content, star)
		VALUES(#{userId}, #{contentId}, #{tripDetailId}, #{content}, #{star})
	</insert>
	
	<select id="getReviews" parameterType="map" resultMap="review">
		SELECT 
			trip_review_id, 
		    tr.user_id as user_id, 
		    content_id, 
		    tr.content as content, 
		    star, 
		    tr.created_at as created_at, 
		    nickname,
		    profile,
    		title as attraction_title,
		    COALESCE(l.like_count, 0) AS like_count,
		    COALESCE(c.comment_count, 0) AS comment_count
		FROM trip_review tr
		LEFT JOIN user USING(user_id)
		LEFT JOIN attraction_info USING(content_id)
		LEFT JOIN (
			SELECT 
				trip_review_id,
		        COUNT(*) AS like_count
			FROM
				review_like
			GROUP BY trip_review_id
		) l USING(trip_review_id)
		LEFT JOIN (
			SELECT
				trip_review_id,
				COUNT(*) AS comment_count
			FROM 
				review_comment
			GROUP BY
				trip_review_id
		) c USING(trip_review_id)
		WHERE 1=1
        <if test="category != null and category != ''">
            AND content_type_id = #{category}
        </if>
        <if test="keyword != null and keyword != ''">
            AND content LIKE CONCAT('%', #{keyword}, '%')
        </if>
		ORDER BY created_at DESC
		LIMIT #{offset}, #{size};
	</select>
	
	<select id="getReviewsByTripDetailId" parameterType="int" resultMap="review">
		SELECT * 
		FROM trip_review
		WHERE trip_detail_Id = #{tripDetailId};
	</select>
	
</mapper>